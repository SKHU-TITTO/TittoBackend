name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

# 본인이 설정한 값을 여기서 채워넣습니다.
# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: tittodeploybucket
  CODE_DEPLOY_APPLICATION_NAME: TittoCodeDeploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: titto-codedeploy-group
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 17 세팅
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
    
    # (3) apllicataion.yml파일 환경변수 설정
    - name: Set apllicataion yml file 
      uses: microsoft/variable-substitution@v1
      with:
        files: ./Titto_Backend/src/main/resources/application.yml 
      env:
        spring.datasource.url: ${{ secrets.DB_JDBC_URL }} 
        spring.datasource.username: ${{ secrets.DB_USER }} 
        spring.datasource.password: ${{ secrets.DB_PASSWORD }} 
        jwt.secret: ${{ secrets.JWT_SECRET }}
        
    # (4) apllicataion-oauth.yml파일 환경변수 설정
    - name: Set apllicataion-oauth yml file 
      uses: microsoft/variable-substitution@v1
      with:
        files: ./Titto_Backend/src/main/resources/application-oauth.yml 
      env:
        oauth.naver.client-id: ${{ secrets.NAVER_CLIENT_ID }}
        oauth.naver.client-secret: ${{ secrets.NAVER_CLIENT_SECRET }}
        oauth.kakao.client-id: ${{ secrets.KAKAO_CLIENT_ID }}
        oauth.kakao.client-secret: ${{ secrets.KAKAO_CLIENT_SECRET }}

    - name: Set apllicataion-production yml file 
      uses: microsoft/variable-substitution@v1
      with:
        files: ./Titto_Backend/src/main/resources/application-production.yml 
      env:
        oauth.kakao.redirect-uri: ${{ secrets.PRODUCTION_REDIRECT_URI_KAKAO }}
        oauth.naver.redirect-uri: ${{ secrets.PRODUCTION_REDIRECT_URI_NAVER }}
      
    # (5) Gradle build (Test 제외)
    - name: Add permission
      run: chmod +x gradlew
      working-directory: ./Titto_Backend
      
    - name: Build with Gradle
      run: ./gradlew clean build -x test
      working-directory: ./Titto_Backend

    # (6) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # (7) 빌드 결과물을 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

    # (8) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip
